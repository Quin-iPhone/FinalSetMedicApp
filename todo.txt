Directory Structure
set-medic-app/ ├── .devcontainer/ │ └── devcontainer.json ├── README.md ├── Dockerfile ├── requirements.txt ├── app.py ├── templates/ │ ├── base.html │ ├── index.html │ ├── services.html │ ├── quote.html │ ├── invoice.html │ ├── payment.html │ ├── receipt.html │ ├── blog.html │ └── blog_detail.html └── static/ ├── css/ │ └── style.css └── img/ └── logo.png
Below are the contents for each file.

 
1. .devcontainer/devcontainer.json
{ "name": "Set Medic App", "dockerFile": "../Dockerfile", "appPort": ["5000:5000"], "extensions": [ "ms-python.python" ], "settings": { "python.pythonPath": "/usr/local/bin/python" } }

 
2. README.md
# Set Medic App Web App This repository contains a complete Python Flask web application for Set Medic App. The app is designed for Events, Film, and Television production companies to review our services, request a quote, book a service, receive an invoice, make a payment, and get a receipt with payment confirmation. It also includes a blog, social media integration, and consistent branding using our custom color palette and typography. ## Features - **Service Overview & Booking:** Browse detailed service listings and request a custom quote. - **Invoicing & Payment:** Auto-generated invoices, secure payment processing, and downloadable receipts. - **Blog & Social Media:** Stay informed with our blog and connect via social media. - **Responsive & Branded UI:** Consistent use of our logo, colors, and fonts, optimized for web and mobile. ## Setup in GitHub Codespaces This project is configured to run directly in GitHub Codespaces using Docker: 1. Open the repository in Codespaces. 2. The Dockerfile and devcontainer configuration will auto-build the environment. 3. Once ready, run: ```bash python app.py ``` and access the app at <http://localhost:5000>. ## Running Locally 1. **Clone or Extract the ZIP Archive** 2. **Navigate to the project directory:** ```bash cd set-medic-app ``` 3. **(Optional) Create a Virtual Environment:** ```bash python -m venv env source env/bin/activate # On Windows: env\Scripts\activate ``` 4. **Install Dependencies:** ```bash pip install -r requirements.txt ``` 5. **Run the Application:** ```bash python app.py ``` ## Customization & Deployment * **Styling:** Modify `static/css/`[`style.css`](https://style.css) to adjust colors, fonts, and layout. * **Payment & Data Integration:** Expand [`app.py`](https://app.py) to integrate with real payment gateways and databases. * **Deployment:** Consider services such as Heroku, AWS, or Render for production deployment. ## License This project is released under the MIT License.

 
3. Dockerfile
FROM python:3.10-slim # Set working directory WORKDIR/workspace # Copy the dependencies file COPY requirements.txt . # Install dependencies RUN pip install --upgrade pip && pip install -r requirements.txt # Copy the rest of the code COPY . . # Expose port 5000 for Flask EXPOSE 5000 # Run the Flask application CMD ["python", "app.py"]

 
4. requirements.txt
Flask==2.2.2
 
5. app.py
from flask import Flask, render_template, request, redirect, url_for, session, flash import random import string app = Flask(__name__) app.secret_key = 'your-secret-key' # Replace with a secure key in production # Dummy data for services services = [ {'id': 1, 'name': 'On-set Medical Support', 'description': 'Comprehensive on-set medical support for film productions.', 'price': 500}, {'id': 2, 'name': 'Event First Aid Kit', 'description': 'Complete first aid kit services for events.', 'price': 300}, {'id': 3, 'name': 'Post-Production Health Check', 'description': 'Health check services post event or filming.', 'price': 400}, ] # Dummy blog posts data blog_posts = [ {'id': 1, 'title': 'The Importance of On-set Medical Support', 'snippet': 'A look into why on-set support is crucial...', 'content': 'Full article content for on-set medical support blog post.', 'date': '2025-06-01'}, {'id': 2, 'title': 'Innovative First Aid Solutions for Events', 'snippet': 'Exploring modern approaches to first aid kits...', 'content': 'Full article content for innovative first aid solutions blog post.', 'date': '2025-06-15'}, ] @app.route('/') def index(): return render_template('index.html') @app.route('/services') def services_page(): return render_template('services.html', services=services) @app.route('/quote', methods=['GET', 'POST']) def quote(): if request.method == 'POST': # Process quote request form name = request.form.get('name') company = request.form.get('company') email = request.form.get('email') contact = request.form.get('contact') service_id = int(request.form.get('service')) details = request.form.get('details') # Find the selected service selected_service = next((s for s in services if s['id'] == service_id), None) if not selected_service: flash("Invalid service selected.") return redirect(url_for('quote')) # Simulate generating a quote number and saving to session quote_number = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8)) quote_data = { 'quote_number': quote_number, 'name': name, 'company': company, 'email': email, 'contact': contact, 'service': selected_service, 'details': details } session['quote_data'] = quote_data return redirect(url_for('invoice')) return render_template('quote.html', services=services) @app.route('/invoice') def invoice(): quote_data = session.get('quote_data') if not quote_data: return redirect(url_for('quote')) total_amount = quote_data['service']['price'] invoice_data = { 'invoice_number': 'INV-' + quote_data['quote_number'], 'name': quote_data['name'], 'company': quote_data['company'], 'service': quote_data['service'], 'total_amount': total_amount } session['invoice_data'] = invoice_data return render_template('invoice.html', invoice=invoice_data) @app.route('/payment', methods=['GET', 'POST']) def payment(): invoice_data = session.get('invoice_data') if not invoice_data: return redirect(url_for('quote')) if request.method == 'POST': # Simulate payment processing card_number = request.form.get('card_number') expiry = request.form.get('expiry') cvv = request.form.get('cvv') payment_confirmation = 'PAY-' + invoice_data['invoice_number'] session['payment_confirmation'] = payment_confirmation return redirect(url_for('receipt')) return render_template('payment.html', invoice=invoice_data) @app.route('/receipt') def receipt(): invoice_data = session.get('invoice_data') payment_confirmation = session.get('payment_confirmation') if not invoice_data or not payment_confirmation: return redirect(url_for('quote')) receipt_data = { 'receipt_number': payment_confirmation, 'name': invoice_data['name'], 'company': invoice_data['company'], 'service': invoice_data['service'], 'total_amount': invoice_data['total_amount'] } # Clear session data for this demo  session.pop('quote_data', None) session.pop('invoice_data', None)  session.pop('payment_confirmation', None) return render_template('receipt.html', receipt=receipt_data) @app.route('/blog') def blog(): return render_template('blog.html', posts=blog_posts) @app.route('/blog/<int:post_id>') def blog_detail(post_id): post = next((p for p in blog_posts if p['id'] == post_id), None) if not post: return redirect(url_for('blog')) return render_template('blog_detail.html', post=post) if __name__ == '__main__':  app.run(debug=True)

 
6. templates/base.html
<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <title>Set Medic App</title> <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}"> </head> <body> <header> <div class="container header-container"> <!-- Logo Display --> <img src="{{ url_for('static', filename='img/logo.png') }}" alt="Set Medic App Logo" class="logo"> <h1>Set Medic App</h1> <nav> <ul> <li><a href="{{ url_for('index') }}">Home</a></li> <li><a href="{{ url_for('services_page') }}">Services</a></li> <li><a href="{{ url_for('quote') }}">Get a Quote</a></li> <li><a href="{{ url_for('blog') }}">Blog</a></li> </ul> </nav> </div> </header> <div class="content container"> {% block content %} {% endblock %} </div> <footer> <div class="container"> <p>&copy; 2025 Set Medic App</p> <p>Follow us on <a href="https://facebook.com/setmedicsa" target="_blank">Facebook</a>, <a href="https://twitter.com/setmedicsa" target="_blank">Twitter</a>, <a href="https://instagram.com/setmedicsa" target="_blank">Instagram</a> </p> </div> </footer> </body> </html>

 
7. templates/index.html
{% extends "base.html" %} {% block content %} <h2>Welcome to Set Medic App</h2> <p>Your partner for reliable on-set medical services. Our solutions support production teams in Events, Film, and Television—ensuring safety and efficiency every step of the way.</p> {% endblock%}

 
8. templates/services.html
{% extends "base.html" %} {% block content %} <h2>Our Services</h2> <ul class="services-list"> {% for service in services %} <li> <h3>{{ service.name }}</h3> <p>{{ service.description }}</p> <p>Starting at: ${{ service.price }}</p> <a href="{{ url_for('quote') }}?service_id={{ service.id }}">Get a Quote</a> </li> {% endfor %} </ul> {% endblock %}

9. templates/quote.html
{% extends "base.html" %} {% block content %} <h2>Request a Quote</h2> <form action="{{ url_for('quote') }}" method="POST"> <label for="name">Your Name:</label><br> <input type="text" id="name" name="name" required><br><br> <label for="company">Company:</label><br> <input type="text" id="company" name="company" required><br><br> <label for="email">Email:</label><br> <input type="email" id="email" name="email" required><br><br> <label for="contact">Contact Number:</label><br> <input type="text" id="contact" name="contact" required><br><br> <label for="service">Select Service:</label><br> <select id="service" name="service" required> {% for service in services %} <option value="{{ service.id }}">{{ service.name }} - ${{ service.price }}</option> {% endfor%} </select><br><br> <label for="details">Additional Details:</label><br> <textarea id="details" name="details" rows="4" cols="50" placeholder="Describe your requirements..."></textarea><br><br> <input type="submit" value="Submit Quote Request"> </form> {% endblock %}
 
10. templates/invoice.html
{% extends "base.html" %} {% block content %} <h2>Invoice</h2> <p>Invoice Number: <strong>{{ invoice.invoice_number }}</strong></p> <p>Name: {{ invoice.name }}</p> <p>Company: {{ invoice.company }}</p> <p>Service: {{ invoice.service.name }}</p> <p>Total Amount: ${{ invoice.total_amount }}</p> <a href="{{ url_for('payment') }}" class="button">Proceed to Payment</a> {% endblock %}

11. templates/payment.html
{% extends "base.html" %} {% block content %} <h2>Payment</h2> <p>Invoice Number: <strong>{{ invoice.invoice_number }}</strong> | Amount: ${{ invoice.total_amount }}</p> <form action="{{ url_for('payment') }}" method="POST"> <label for="card_number">Credit Card Number:</label><br> <input type="text" id="card_number" name="card_number" required><br><br> <label for="expiry">Expiry Date (MM/YY):</label><br> <input type="text" id="expiry" name="expiry" required><br><br> <label for="cvv">CVV:</label><br> <input type="text" id="cvv" name="cvv" required><br><br> <input type="submit" value="Submit Payment"> </form> {% endblock %}
 
12. templates/receipt.html
{% extends "base.html" %} {% block content %} <h2>Payment Receipt</h2> <p>Receipt Number: <strong>{{ receipt.receipt_number }}</strong></p> <p>Thank you, {{ receipt.name }} ({{ receipt.company }}) for your payment.</p> <p>Service: {{ receipt.service.name }}</p> <p>Total Paid: ${{ receipt.total_amount }}</p> <p>Your transaction has been successfully processed.</p> {% endblock %}

13. templates/blog.html
{% extends "base.html" %} {% block content %} <h2>Our Blog</h2> <ul class="blog-list"> {% for post in posts %} <li> <h3><a href="{{ url_for('blog_detail', post_id=post.id) }}">{{ post.title }}</a></h3> <p>{{ post.snippet }}</p> <small>Published on {{ post.date }}</small> </li> {% endfor%} </ul> {% endblock %}

14. templates/blog_detail.html
{% extends "base.html" %} {% block content %} <article class="blog-post"> <h2>{{ post.title }}</h2> <small>Published on {{ post.date }}</small> <div class="post-content"> <p>{{ post.content }}</p> </div> <a href="{{ url_for('blog') }}">Back to Blog</a> </article> {% endblock %}
 
15. static/css/style.css
/* Color palette and typography */ :root { --primary-color: #007BFF; /* Update as needed to match your brand */ --secondary-color: #4CAF50; --accent-color: #FFC107; --dark-color: #333; --light-color: #f4f4f4; --font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; } body { font-family: var(--font-family); margin: 0; padding: 0; background: var(--light-color); color: var(--dark-color); } .container { width: 90%; margin: 0 auto; } header { background: var(--primary-color); color: white; padding: 20px 0; } .header-container { display: flex; align-items: center; justify-content: space-between; } .logo { max-height: 60px; margin-right: 20px; } nav ul { list-style: none; padding: 0; text-align: right; } nav ul li { display: inline-block; margin: 0 15px; } nav ul li a { color: white; text-decoration: none; font-weight: bold; } .content { padding: 20px 0; } footer { background: var(--primary-color); color: white; text-align: center; padding: 15px 0; margin-top: 20px; } .services-list, .blog-list { list-style: none; padding: 0; } .services-list li, .blog-list li { background: white; margin-bottom: 15px; padding: 15px; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
 
16. static/img/logo.png
Place your actual logo image file in this location. Make sure the file is named logo.png.
